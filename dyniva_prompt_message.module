<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\user\UserInterface;

/**
 * Implements hook_entity_insert().
 */
function dyniva_prompt_message_entity_insert(EntityInterface $entity) {
  $context = [
    'entity' => $entity,
    'op' => 'insert',
  ];

  \Drupal::service('plugin.manager.prompt_rule_plugin')->prompt('entity_crud', $context);
}

/**
 * Implements hook_entity_update().
 */
function dyniva_prompt_message_entity_update(EntityInterface $entity) {
  $context = [
    'entity' => $entity,
    'op' => 'update',
  ];
  if (!empty($entity->_deleted->value)) {
    $context['op'] = 'delete';
  }
  \Drupal::service('plugin.manager.prompt_rule_plugin')->prompt('entity_crud', $context);
}

/**
 * Implements hook_entity_delete().
 */
function dyniva_prompt_message_entity_delete(EntityInterface $entity) {
  $context = [
    'entity' => $entity,
    'op' => 'delete',
  ];

  \Drupal::service('plugin.manager.prompt_rule_plugin')->prompt('entity_crud', $context);
}
/**
 * Implements hook_user_login().
 * @param UserInterface $account
 */
function dyniva_prompt_message_user_login(UserInterface $account) {
  $context = [
    'entity' => $account,
  ];
  
  \Drupal::service('plugin.manager.prompt_rule_plugin')->prompt('user_login', $context);
}
/**
 * Implements hook_page_attachments().
 */
function dyniva_prompt_message_page_attachments(array &$attachments) {
  $current_theme_name = \Drupal::theme()->getActiveTheme()->getName();
  $admin_theme = \Drupal::config('system.theme')->get('admin');
  if($current_theme_name != $admin_theme){
    $attachments['#attached']['library'][] = 'dyniva_prompt_message/force';
  }
}